建造者模式
    也叫做生成器模式
    将一个复杂对象的创建与它的表示分离， 使得同样的构建过程可以创建不同的表示

模式中的4个角色
    Product产品类：通常是实现了模板方法模式，也就是有模板方法和基本方法
    Builder抽象建造者：规范产品的组装，一般是由子类实现
    ConcreteBuilder具体建造者：实现抽象类中的方法，并且返回一个组装好的对象。
    Director导演类：负责安排已有模块的顺序，避免高层模块深入到建造者内部的实现类。导演类可以有多个;


优点：
    封装性好
    建造者独立，容易扩展
    便于控制细节风险

使用场景：
    相同的方法，不同的执行顺序，产生不同的事件结果时，可以采用建造者模式

建造者模式注重的是零件类型和装配工艺（顺序）。


源码中的应用：
                Mybatis提供了一个CacheBuilder类，通过生成器模式创建缓存对象。 这个是比较简单的一个用法。

