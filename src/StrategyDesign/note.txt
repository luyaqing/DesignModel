

策略模式

        策略模式使用的就是面向对象的继承和多态机制
        有三个角色：
                    Context封装角色
                    Strategy抽象策略角色
                    ConCreteStrategy具体策略角色

        优点：
                1：算法可以自由的切换
                2：避免使用多重条件判断
                3：扩展性良好
        缺点：
                1：策略类数量增多，复用的可能性比较小
                2：所有的策略类都需要对外暴露 (重要)

        使用的场景：
                1：多个类只有在算法或行为上稍有不同的场景
                2：算法需要自由切换的场景
                3：需要屏蔽算法规则的场景

        策略模式的扩展：
                策略枚举  缺点是每个枚举项都是public、final、static，扩展性受到了一定的约束， 因为在系统开发中，策略枚举一般担当不经常发生变化的角色